# Read shuffler# Author: Warren Emmett # Created: August 2009# Shuffles all reads or references in FASTA format (with specified extension) that are contained within a directory and produces a new directory containing all the shuffled sequencesimport sysimport osimport randomif len(sys.argv) == 1:    print "script.py indir outdir file_extension"    print "Example: python script.py /home/warren/reads /home/warren/output fasta\n\n\n\nAll reads in /home/warren/reads will be shuffled that have a .fasta extension\nand shuffled reads will be output to /home/warren/output"    sys.exit()indir = sys.argv[1]outdir = sys.argv[2]ext = sys.argv[3]print "outdir",outdirif os.path.exists(outdir):    print ""else:    os.mkdir(outdir)    print "Directory made"def clip_Ns(seq):    seq = seq.upper()    while seq[0] == "N":        seq = seq[1:]        while seq[-1] == "N":        seq = seq[:-1]    return seq                replist = []files = os.listdir(indir)for infile in files:    if infile.endswith("."+ext):                print infile        seq_dict = {}        score_dict = {}        outlist = []                    outfile = infile.split(".")[0]        num_reads_1st_threshold = 0                    num_reads_3N = 0        num_reads_3N_len = []                num_reads_2N =0        num_reads_2N_len = []                num_reads_1N =0        num_reads_1N_len = []                num_reads_0N =0        num_reads_0N_len = []                #print os.path.join(outdir,outfile)        #outfastq = open(os.path.join(outdir,outfile)+".fastq","w")        outfasta = open(os.path.join(outdir,outfile)+".fa","w")        total = 0        head = ""        seq = ""        for line in open(os.path.join(indir,infile)):            total +=1                        if line.startswith(">"):                                if head != "":                                        seq_list = list(seq)                                random.shuffle(seq_list)                                        seq = "".join(seq_list)                                        seq_dict[head]= seq                                        seq = ""                                head= line[1:].strip()             else:                seq += line.strip()                                                                                                                                                                                                                        print len(seq_dict)        """        for seq in seq_dict:            outlist.append("@%s\n%s\n+\n%s\n"%("%s_%s"%(count,seq_dict[seq]),seq,score_dict[seq]))            count+= 1        outfastq.writelines(outlist)        """                outlist= []                    count = 0        for seq in seq_dict:            outlist.append(">%s\n%s\n"%(seq,seq_dict[seq]))            count+= 1                    print len(seq_dict)                outfasta.writelines(outlist)        outlist= []                      else:        continue            